# Copyright 2011,2012,2016,2018 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-satnogs
#
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
#
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

include_directories(
    ${Boost_INCLUDE_DIR}
    ${VOLK_INCLUDE_DIRS}
    ${VORBIS_INCLUDE_DIR}
    ${OGG_INCLUDE_DIR}
    ${PNG_INCLUDE_DIR}
    ${png++_INCLUDE_DIRS}
    ${FEC_INCLUDE_DIRS}
    ${JSONCPP_INCLUDE_DIRS}
)

link_directories(${Boost_LIBRARY_DIRS} ${GNURADIO_ALL_LIBRARIES})

list(APPEND satnogs_debug_sources
    morse_debug_source_impl.cc
    debug_msg_source_impl.cc
    debug_msg_source_raw_impl.cc
    cw_encoder_impl.cc
)
list(APPEND satnogs_sources
    amsat_duv_decoder.cc
    ax100_decoder.cc
    ax25_decoder.cc
    ax25_encoder_mb_impl.cc
    coarse_doppler_correction_cc_impl.cc
    convolutional_deinterleaver.cc
    crc.cc
    cw_to_symbol_impl.cc
    decoder.cc
    doppler_correction_cc_impl.cc
    doppler_fit.cc
    frame_decoder_impl.cc
    frame_file_sink_impl.cc
    freq_drift.cc
    golay24.cc
    ieee802_15_4_variant_decoder.cc
    iq_sink_impl.cc
    json_converter_impl.cc
    lrpt_decoder_impl.cc
    lrpt_sync_impl.cc
    metadata.cc
    morse_decoder_impl.cc
    morse_tree.cc
    multi_format_msg_sink_impl.cc
    noaa_apt_sink_impl.cc
    ogg_encoder_impl.cc
    ogg_source_impl.cc
    shift_reg.cc
    tcp_rigctl_msg_source_impl.cc
    udp_msg_sink_impl.cc
    udp_msg_source_impl.cc
    waterfall_sink_impl.cc
    whitening.cc
)

if(${INCLUDE_DEBUG_BLOCKS})
	list(APPEND satnogs_sources ${satnogs_debug_sources})
endif()

include(GrPython)

set(satnogs_sources "${satnogs_sources}" PARENT_SCOPE)
if(NOT satnogs_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT satnogs_sources)

add_library(gnuradio-satnogs SHARED ${satnogs_sources})
add_dependencies(gnuradio-satnogs fec)

target_link_libraries(gnuradio-satnogs PUBLIC
    ${Boost_LIBRARIES}
    Boost::chrono
    gnuradio::gnuradio-runtime
    gnuradio::gnuradio-fft
    gnuradio::gnuradio-blocks
    gnuradio::gnuradio-digital
    ${CMAKE_THREAD_LIBS_INIT}
    ${VOLK_LIBRARIES}
    ${OGGVORBIS_LIBRARIES}
    ${PNG_LIBRARIES}
    ${png++_LIBRARIES}
    ${FEC_LIBRARIES}
    ${JSONCPP_LIBRARY}
)
target_include_directories(gnuradio-satnogs
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-satnogs PROPERTIES DEFINE_SYMBOL "gnuradio_satnogs_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-satnogs PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-satnogs)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_satnogs_sources
    qa_golay24.cc
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-satnogs)

if(NOT test_satnogs_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_satnogs_sources)

foreach(qa_file ${test_satnogs_sources})
    GR_ADD_CPP_TEST("satnogs_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)

